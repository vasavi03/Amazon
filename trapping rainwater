import java.util.*;
public class Main
{
//Solution-1  ///Time Complexity :O(N) Space Complexity: O(N)
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
    int n=sc.nextInt();
    int a[]=new int[n];
    for(int i=0;i<n;i++)
    a[i]=sc.nextInt();
    int left[]=new int[a.length];
		int right[]=new int[a.length];
		left[0]=a[0];
		int total=0;
		for(int i=1;i<a.length;i++)
		left[i]=Math.max(left[i-1],a[i]);
		right[a.length-1]=a[a.length-1];
		for(int i=a.length-2;i>=0;i--)
		right[i]=Math.max(right[i+1],a[i]);
		for(int i=0;i<a.length;i++)
		total+=Math.min(left[i],right[i])-a[i];
		System.out.println(total);
	//Solution 2 //Time Complexity :O(N) Space Complexity: O(1)
		int left=0,right=0;
		int total=0;
		int i=0,j=a.length-1;
		while(i<=j)
		{
		    if(a[i]<a[j])
		    {
		        if(a[i]>left)
		        left=a[i];
		        else
		        total+=left-a[i];
		        i++;
		    }
		    else
		    {
		        if(a[j]>right)
		        right=a[j];
		        else
		        total+=right-a[j];
		        j--;
		    }
		}
		System.out.println(total);
	}
}
